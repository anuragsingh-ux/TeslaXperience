{"version":3,"sources":["features/car/carSlice.js","components/Header.js","components/Section.js","components/Home.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["carSlice","createSlice","name","initialState","cars","reducers","selectCars","state","car","Container","styled","div","_templateObject","_taggedTemplateLiteral","Menu","_templateObject2","RightMenu","_templateObject3","CustomMenu","MenuIcon","_templateObject4","BurgerNav","_templateObject5","props","show","CustomClose","CloseIcon","_templateObject6","Header","burgerStatus","setBurgerStatus","useState","useSelector","_jsxs","children","_jsx","href","src","alt","map","index","onClick","Section","_ref","title","description","leftButtonText","rightButtonText","backgroundImage","showDownArrow","Wrap","bgImage","Fade","bottom","ItemText","Buttons","ButtonGroup","LeftButton","RightButton","DownArrow","concat","img","_templateObject7","Home","App","className","store","configureStore","reducer","carReducer","Boolean","window","location","hostname","match","ReactDOM","render","React","StrictMode","Provider","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.20439a70.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  cars: [\n    \"Model S\",\n    \"Model 3\",\n    \"Model X\",\n    \"Model Y\",\n    \"Solar Roof\",\n    \"Solar Panels\",\n  ],\n};\n\nconst carSlice = createSlice({\n  name: \"car\",\n  initialState,\n  reducers: {},\n});\n\nexport const selectCars = (state) => state.car.cars;\nexport default carSlice.reducer;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { selectCars } from \"../features/car/carSlice\";\nimport { useSelector } from \"react-redux\";\n\nfunction Header() {\n  const [burgerStatus, setBurgerStatus] = useState(false);\n  const cars = useSelector(selectCars);\n\n  return (\n    <Container>\n      <a href=\"/\">\n        <img src=\"/images/logo.svg\" alt=\"\" />\n      </a>\n      <Menu>\n        {cars &&\n          cars.map((car, index) => (\n            <a href=\"/\" key={index}>\n              {car}\n            </a>\n          ))}\n      </Menu>\n      <RightMenu>\n        <a href=\"/\">Shop</a>\n        <a href=\"/\">Account</a>\n        <CustomMenu\n          onClick={() => {\n            setBurgerStatus(true);\n          }}\n        />\n      </RightMenu>\n      <BurgerNav show={burgerStatus}>\n        <CustomClose\n          onClick={() => {\n            setBurgerStatus(false);\n          }}\n        />\n        {cars &&\n          cars.map((car, index) => (\n            <li key={index}>\n              <a href=\"/\" key={index}>\n                {car}\n              </a>\n            </li>\n          ))}\n        <li>\n          <a href=\"/\">Existing Inventory</a>\n        </li>\n        <li>\n          <a href=\"/\">Used Inventory</a>\n        </li>\n        <li>\n          <a href=\"/\">Cybertruck</a>\n        </li>\n        <li>\n          <a href=\"/\">Roadster</a>\n        </li>\n      </BurgerNav>\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  min-height: 60px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0 20px;\n  z-index: 1;\n`;\n\nconst Menu = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex: 1;\n\n  a {\n    font-weight: 600;\n    padding: 0 10px;\n    flex-wrap: nowrap;\n  }\n\n  @media (max-width: 768px) {\n    display: none;\n  }\n`;\n\nconst RightMenu = styled.div`\n  display: flex;\n  align-items: center;\n  margin-right: 10px;\n  a {\n    font-weight: 600;\n    text-transform: uppercase;\n    margin-right: 10px;\n  }\n`;\n\nconst CustomMenu = styled(MenuIcon)`\n  cursor: pointer;\n`;\n\nconst BurgerNav = styled.div`\n  position: fixed;\n  top: 0;\n  bottom: 0;\n  right: 0;\n  background: white;\n  width: 300px;\n  list-style: none;\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  text-align: start;\n  transform: ${(props) => (props.show ? \"translateX(0)\" : \"translateX(100%)\")};\n  transition: transform 0.3s ease-in-out;\n  li {\n    padding: 15px 0;\n    border-bottom: 1px solid rgba(0, 0, 0, 0.2);\n    a {\n      font-weight: 600;\n    }\n  }\n  z-index: 10;\n`;\n\nconst CustomClose = styled(CloseIcon)`\n  align-self: end;\n  cursor: pointer;\n  margin-right: 10px;\n`;\n\nexport default Header;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Fade from \"react-reveal/Fade\";\n\nfunction Section({\n  title,\n  description,\n  leftButtonText,\n  rightButtonText,\n  backgroundImage,\n  showDownArrow,\n}) {\n  return (\n    <Wrap bgImage={backgroundImage}>\n      <Fade bottom>\n        <ItemText>\n          <h1>{title}</h1>\n          <p>{description}</p>\n        </ItemText>\n      </Fade>\n      <Buttons>\n        <Fade bottom>\n          <ButtonGroup>\n            <LeftButton>{leftButtonText}</LeftButton>\n            {rightButtonText && <RightButton>{rightButtonText}</RightButton>}\n          </ButtonGroup>\n        </Fade>\n        {showDownArrow && <DownArrow src=\"/images/down-arrow.svg\"></DownArrow>}\n      </Buttons>\n    </Wrap>\n  );\n}\n\nexport default Section;\n\nconst Wrap = styled.div`\n  width: 100vw;\n  height: 100vh;\n  background-size: cover;\n  background-position: center;\n  background-repeat: no-repeat;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n  background-image: ${(props) => `url(\"/images/${props.bgImage}\")`};\n  scroll-snap-align: start;\n  z-index: 1;\n`;\n\nconst ItemText = styled.div`\n  padding-top: 15vh;\n  text-align: center;\n`;\n\nconst Buttons = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst ButtonGroup = styled.div`\n  display: flex;\n  margin-bottom: 30px;\n  gap: 25px;\n  @media (max-width: 768px) {\n    flex-direction: column;\n  }\n`;\n\nconst LeftButton = styled.div`\n  cursor: pointer;\n  background-color: rgba(23, 26, 32, 0.8);\n  height: 40px;\n  width: 256px;\n  color: white;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 100px;\n  opacity: 0.85;\n  text-transform: uppercase;\n  font-size: 12px;\n  font-weight: bold;\n`;\n\nconst RightButton = styled(LeftButton)`\n  background-color: white;\n  opacity: 0.65;\n  color: black;\n`;\nconst DownArrow = styled.img`\n  margin-top: 20px;\n  margin-bottom: 20px;\n  height: 40px;\n  animation: bounce infinite 1.5s;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Section from \"./Section\";\n\nfunction Home() {\n  return (\n    <Container>\n      <Section\n        title=\"Model S\"\n        description=\"Order Online for Touchless Delivery\"\n        backgroundImage=\"model-s.jpg\"\n        leftButtonText=\"Custom Order\"\n        rightButtonText=\"Existing Inventory\"\n        showDownArrow\n      />\n      <Section\n        title=\"Model Y\"\n        description=\"Order Online for Touchless Delivery\"\n        backgroundImage=\"model-y.jpg\"\n        leftButtonText=\"Custom Order\"\n        rightButtonText=\"Existing Inventory\"\n      />\n      <Section\n        title=\"Model 3\"\n        description=\"Order Online for Touchless Delivery\"\n        backgroundImage=\"model-3.jpg\"\n        leftButtonText=\"Custom Order\"\n        rightButtonText=\"Existing Inventory\"\n      />\n      <Section\n        title=\"Model X\"\n        description=\"Order Online for Touchless Delivery\"\n        backgroundImage=\"model-x.jpg\"\n        leftButtonText=\"Custom Order\"\n        rightButtonText=\"Existing Inventory\"\n      />\n      <Section\n        title=\"Solar Panels\"\n        description=\"Lowest Cost Solar Panels in America\"\n        backgroundImage=\"solar-panel.jpg\"\n        leftButtonText=\"Order Now\"\n        rightButtonText=\"Learn More\"\n      />\n      <Section\n        title=\"Solar Roof\"\n        description=\"Produce Clean Energy From Your Roof\"\n        backgroundImage=\"solar-roof.jpg\"\n        leftButtonText=\"Order Now\"\n        rightButtonText=\"Learn More\"\n      />\n      <Section\n        title=\"Accessories\"\n        description=\"\"\n        backgroundImage=\"accessories.jpg\"\n        leftButtonText=\"Shop Now\"\n      />\n    </Container>\n  );\n}\n\nexport default Home;\nconst Container = styled.div`\n  height: 100vh;\n  scroll-snap-type: y mandatory;\n  overflow-y: scroll;\n  overflow-x: hidden;\n`;\n","import React from \"react\";\nimport Header from \"./components/Header\";\nimport Home from \"./components/Home\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport carReducer from \"../features/car/carSlice\";\n\nexport const store = configureStore({\n  reducer: {\n    car: carReducer,\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { store } from \"./app/store\";\nimport { Provider } from \"react-redux\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}